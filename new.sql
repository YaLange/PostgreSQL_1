ALTER TABLE Треки
ADD COLUMN Альбом_ID INT,
ADD FOREIGN KEY (Альбом_ID) REFERENCES Альбомы (Альбом_ID);

--Создание таблицы связей "многие-ко-многим" для связи между исполнителями и альбомами
CREATE TABLE Исполнители_Альбомы (
Исполнитель_ID INT,
Альбом_ID INT,
PRIMARY KEY (Исполнитель_ID, Альбом_ID),
FOREIGN KEY (Исполнитель_ID) REFERENCES Исполнители (Исполнитель_ID),
FOREIGN KEY (Альбом_ID) REFERENCES Альбомы (Альбом_ID)
);

--Создание таблицы связей "многие-ко-многим" для связи между жанрами и исполнителями
CREATE TABLE Жанры_Исполнители (
Жанр_ID INT,
Исполнитель_ID INT,
PRIMARY KEY (Жанр_ID, Исполнитель_ID),
FOREIGN KEY (Жанр_ID) REFERENCES Жанры (Жанр_ID),
FOREIGN KEY (Исполнитель_ID) REFERENCES Исполнители (Исполнитель_ID)
);

-- Создание таблицы "Жанры" с ограничением на уникальность названия жанров
CREATE TABLE Жанры (
    Жанр_ID INT PRIMARY KEY,
    Название_жанра VARCHAR(50) UNIQUE
);

-- Создание таблицы "Исполнители" без поля с жанром
CREATE TABLE Исполнители (
    Исполнитель_ID INT PRIMARY KEY,
    Имя_исполнителя VARCHAR(100)
);

-- Создание таблицы "Альбомы" с ограничением на год выхода альбомов
CREATE TABLE Альбомы (
    Альбом_ID INT PRIMARY KEY,
    Название_альбома VARCHAR(100),
    Год_выпуска DATE CHECK (Год_выпуска >= '2000-01-01')
);

-- Создание таблицы "Треки" с ограничением на продолжительность треков
CREATE TABLE Треки (
    Трек_ID INT PRIMARY KEY,
    Название_трека VARCHAR(100),
    Длительность TIME CHECK (Длительность >= '00:02:00' AND Длительность <= '00:10:00')
);

-- Создание таблицы "Сборники"
CREATE TABLE Сборники (
    Сборник_ID INT PRIMARY KEY,
    Название_сборника VARCHAR(100),
    Год_выпуска DATE CHECK (Год_выпуска >= '2000-01-01')
);

-- Создание таблицы для связи между Треками и Сборниками
CREATE TABLE Треки_в_Сборниках (
    Трек_ID INT,
    Сборник_ID INT,
    FOREIGN KEY (Трек_ID) REFERENCES Треки(Трек_ID),
    FOREIGN KEY (Сборник_ID) REFERENCES Сборники(Сборник_ID),
    PRIMARY KEY (Трек_ID, Сборник_ID)
);

